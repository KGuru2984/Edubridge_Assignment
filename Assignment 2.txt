

class Ass2 {

	class Node {
		int data;
		Node next;
		Node pre;
		Node(int data)
		{
			this.data = data;
			pre = null;
			next = null;
		}
	}

	Node head = null;


	public void insertAtHead(int data)
	{
		Node n = new Node(data);
		if (head == null) {
			head = n;
			return;
		}
		n.next = head;
		head.pre = n;
		head = n;
	}


	public void insertAtTail(int data)
	{
		if (head == null) {
			insertAtHead(data);
			return;
		}
		Node temp = head;
		while (temp.next != null) {
			temp = temp.next;
		}
		Node n = new Node(data);
		temp.next = n;
		n.pre = temp;
	}


	public void display()
	{
		Node curr = head;
		while (curr != null) {
			System.out.print(curr.data + " ");
			curr = curr.next;
		}
		System.out.println();
		System.out.println();

	}


	public void rotateByN(int pos)
	{
		if (pos == 0) {
			return;
		}
		Node curr = head;
		while (pos != 0) {
			curr = curr.next;
			pos--;
		}
		Node tail = curr.pre;
		Node NewHead = curr;
		tail.next = null;
		curr.pre = null;
		while (curr.next != null) {
			curr = curr.next;
		}
		curr.next = head;
		head.pre = curr;
		head = NewHead;
	}

	public static void main(String[] args)
	{
		Ass2 list = new Ass2();

		list.insertAtTail(1);
		list.insertAtTail(2);
		list.insertAtTail(3);
		list.insertAtTail(4);
		list.insertAtTail(5);

		int n = 3;
		System.out.println("Original List : \n");
		list.display();
	
		list.rotateByN(n);
		System.out.println("Updated List : \n");
		list.display();
	}
}


